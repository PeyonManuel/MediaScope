/* src/pages/movie/MovieDetailsPage.module.css */
/* Styles adapted to use global variables from index.css */

/*
  NOTE: The :root and html.dark variable definitions previously
  in this file have been REMOVED. This file now relies entirely
  on the variables defined globally (e.g., in index.css)
  for theming and base values.
*/

/* Base styles with transitions */
.pageContainer {
  position: relative;
  color: var(--text-primary); /* Use global variable */
  background: var(--bg-page); /* Use global variable (could be gradient) */
  transition:
    background 0.3s ease,
    color 0.3s ease; /* Match global transition? */
  min-height: 100vh;
  font-size: 1rem;
  line-height: 1.6;
  overflow-x: hidden;
}

/* More prominent backdrop */
.backdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 60vh; /* Adjusted height */
  background-size: cover;
  background-position: center 20%;
  z-index: 1;
  opacity: 0.2; /* Adjusted opacity */
  filter: saturate(90%) contrast(100%); /* Adjusted filter */
}

.backdropOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 60vh; /* Match backdrop */
  /* Use global --bg-page which might be a gradient or color */
  background: linear-gradient(
    to bottom,
    rgba(from var(--bg-page) r g b / 0) 0%,
    /* Start transparent */ var(--bg-page) 90%
      /* Blend smoothly into page background */
  );
  z-index: 2;
  transition: background 0.3s ease;
}

/* Entrance animation for main content */
@keyframes fadeInSlideUp {
  from {
    opacity: 0;
    transform: translateY(15px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.mainContent {
  position: relative;
  z-index: 3;
  display: flex;
  flex-direction: column;
  gap: 2rem; /* Adjusted gap */
  /* Use header height variable if defined globally, fallback */
  padding: var(--header-height, 6rem) 5% 4rem 5%;
  max-width: 1150px; /* Adjusted max width */
  margin: 0 auto;
  animation: fadeInSlideUp 0.5s ease-out 0.1s both;
}

@media (min-width: 992px) {
  .mainContent {
    flex-direction: row;
    padding-top: 10vh; /* Adjust relative to backdrop */
    gap: 3rem;
  }
}

.sidebar {
  flex: 0 0 280px; /* Adjusted width */
  margin-top: -5rem; /* Adjust overlap */
  position: relative;
  transition: transform 0.2s ease-out;
}

.poster {
  width: 100%;
  height: auto;
  border-radius: var(--border-radius-md); /* Use global radius */
  box-shadow: var(--shadow-lg); /* Use global shadow */
  display: block;
  transition:
    transform 0.2s ease-out,
    box-shadow 0.2s ease-out;
  /* Use subtle background as border color */
  border: 3px solid var(--bg-form);
}
.poster:hover {
  transform: scale(1.02); /* Subtler pop */
  box-shadow: var(--shadow-lg); /* Keep shadow consistent */
}

.actionsPanel {
  background-color: var(--bg-form); /* Use global form bg */
  border-radius: var(--border-radius-md); /* Use global radius */
  padding: 1.25rem;
  margin-top: 1.5rem;
  border: 1px solid var(--border-primary); /* Use global border */
  transition: all 0.2s ease-out;
  box-shadow: var(--shadow-lg); /* Use global shadow */
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(75px, 1fr)
  ); /* Adjust minmax */
  gap: 0.6rem; /* Adjust gap */
}
.actionsPanel:hover {
  border-color: var(--border-focus); /* Use focus border on hover */
}

.actionButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
  padding: 0.5rem 0.75rem;
  border-radius: var(--border-radius-md);
  border: 1px solid var(--border-primary); /* Use primary border */
  /* Start transparent or use subtle bg */
  background-color: transparent;
  color: var(--text-secondary); /* Use secondary text */
  cursor: pointer;
  font-weight: 500; /* Adjusted weight */
  font-size: 0.8rem; /* Adjusted size */
  transition: all 0.2s ease-out;
  white-space: nowrap;
  text-align: center;
}
.actionButton:hover:not(:disabled) {
  background-color: var(
    --bg-input-disabled
  ); /* Use disabled input bg for hover */
  color: var(--text-primary);
  border-color: var(--border-primary);
}
.actionButton.active {
  background-color: var(--brand-pink-default); /* Use brand color */
  color: var(--text-button); /* Use button text color */
  border-color: var(--brand-pink-default);
}
.actionButton.active:hover {
  background-color: var(--brand-pink-dark); /* Use dark brand color */
  border-color: var(--brand-pink-dark);
}
.actionButton:disabled {
  opacity: 0.6; /* Adjusted opacity */
  cursor: not-allowed;
  background-color: var(--bg-input-disabled);
  color: var(--text-secondary);
  border-color: var(--border-primary);
}
/* Use global focus shadow for buttons */
.actionButton:focus-visible {
  outline: none;
  box-shadow: var(--button-focus-shadow);
}
.actionButton svg {
  width: 1rem; /* Adjusted size */
  height: 1rem;
  fill: currentColor;
}
.likeButton.active svg {
  fill: var(--text-button); /* Match text color when active */
}

.loginPrompt {
  font-size: 0.875rem;
  color: var(--text-secondary);
  background-color: var(--bg-form);
  padding: 1rem;
  margin-top: 1.5rem;
  border-radius: var(--border-radius-md);
  text-align: center;
  border: 1px solid var(--border-primary);
}
.loginPrompt a {
  color: var(--text-link); /* Use global link color */
  font-weight: 500;
  text-decoration: none;
}
.loginPrompt a:hover {
  color: var(--text-link-hover); /* Use global link hover color */
  text-decoration: underline;
}

.infoSection {
  flex: 1;
  min-width: 0;
}

.title {
  font-size: 2.5rem; /* Adjusted size */
  font-weight: 700; /* Adjusted weight */
  color: var(--text-heading); /* Use global heading color */
  margin: 0 0 0.25rem 0;
  line-height: 1.15; /* Adjusted line height */
  letter-spacing: -0.02em;
}

.meta {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem 1rem; /* Adjusted gap */
  margin-top: 0.75rem;
  margin-bottom: 1.25rem;
  color: var(--text-secondary);
  font-size: 0.9rem;
}
.year {
  font-weight: 600;
  color: var(--text-primary);
  margin-right: 0.5rem;
}
.runtime::before {
  content: 'â€¢';
  margin-right: 0.5rem;
  color: var(--text-secondary);
}

.tagline {
  font-style: italic; /* Keep italic */
  color: var(--text-secondary);
  margin: 1.5rem 0;
  font-size: 1.15rem;
  border-left: 3px solid var(--brand-pink-default); /* Use brand color */
  padding-left: 1rem;
  opacity: 0.9;
}

.sectionHeading {
  font-size: 1.375rem; /* Adjusted size */
  font-weight: 600;
  color: var(--text-heading);
  margin: 2.5rem 0 1rem 0;
  border-bottom: 1px solid var(--border-primary); /* Use primary border */
  padding-bottom: 0.5rem;
  letter-spacing: -0.01em;
}

.overview {
  font-size: 1rem;
  line-height: 1.7; /* Adjusted line height */
  color: var(--text-primary);
}

.genres {
  display: flex;
  flex-wrap: wrap;
  gap: 0.6rem;
  margin-top: 1.25rem;
}

.genreTag {
  display: inline-block;
  padding: 0.3rem 0.8rem;
  background-color: var(--bg-input-disabled); /* Use disabled input bg */
  color: var(--text-secondary); /* Use secondary text */
  font-size: 0.75rem;
  font-weight: 500;
  border-radius: 9999px; /* rounded-full */
  border: none; /* Remove border */
  transition:
    background-color 0.2s ease-out,
    color 0.2s ease-out;
}
.genreTag:hover {
  background-color: var(--border-primary); /* Use border color for hover */
  color: var(--text-primary);
}

.ratingSection {
  grid-column: 1 / -1;
  border-top: 1px solid var(--border-primary);
  padding-top: 0.85rem;
  margin-top: 0.85rem;
  text-align: center;
}
.ratingLabel {
  display: block;
  font-size: 0.75rem; /* Adjusted size */
  color: var(--text-secondary);
  margin-bottom: 0.4rem;
  font-weight: 500; /* Adjusted weight */
  text-transform: uppercase;
  letter-spacing: 0.04em;
}

.reviewSection {
  grid-column: 1 / -1;
  margin-top: 0.85rem;
  border-top: 1px solid var(--border-primary);
  padding-top: 1rem;
}

.reviewTextarea {
  width: 100%;
  border-radius: var(--border-radius-md);
  border: 1px solid var(--border-primary);
  background-color: var(--bg-input); /* Use input background */
  color: var(--text-input); /* Use input text color */
  padding: 0.6rem 0.8rem; /* Adjusted padding */
  font-size: 0.9rem;
  line-height: 1.6;
  margin-bottom: 0.6rem;
  min-height: 90px;
  transition:
    border-color 0.2s ease,
    box-shadow 0.2s ease;
}
.reviewTextarea::placeholder {
  color: var(--text-placeholder); /* Use placeholder color */
}
.reviewTextarea:focus {
  border-color: var(--border-focus); /* Use focus border color */
  outline: none;
  box-shadow: var(--ring-focus-shadow); /* Use focus ring */
}

.reviewDisplay {
  font-size: 0.9rem;
  color: var(--text-primary);
  margin-bottom: 0.75rem;
  white-space: pre-wrap;
  background-color: var(--bg-input-disabled); /* Use disabled bg */
  padding: 0.75rem 1rem;
  border-radius: var(--border-radius-md);
  border: 1px solid var(--border-primary);
  line-height: 1.6;
}

.reviewActions {
  display: flex;
  justify-content: flex-end;
  gap: 0.6rem; /* Adjusted gap */
}
.reviewSaveButton,
.reviewCancelButton {
  padding: 0.4rem 0.9rem; /* Adjusted padding */
  font-size: 0.8rem;
  font-weight: 500; /* Adjusted weight */
  border-radius: var(--border-radius-md);
  border: 1px solid transparent;
  cursor: pointer;
  transition: all 0.2s ease-out;
}
.reviewSaveButton {
  background-color: var(--brand-pink-default); /* Use brand color */
  color: var(--text-button);
}
.reviewSaveButton:hover {
  background-color: var(--brand-pink-dark);
}
.reviewCancelButton {
  background-color: transparent;
  color: var(--text-secondary);
  border-color: var(--border-primary);
}
.reviewCancelButton:hover {
  background-color: var(--bg-input-disabled);
  border-color: var(--border-primary);
  color: var(--text-primary);
}
.reviewSaveButton:focus-visible {
  outline: none;
  box-shadow: var(--button-focus-shadow);
}
.reviewCancelButton:focus-visible {
  outline: none;
  box-shadow: var(--button-focus-shadow);
}

/* Loading/Error States */
.loading,
.error {
  padding: 6rem 2rem;
  text-align: center;
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--text-secondary);
}
.error {
  color: var(--text-error); /* Use error text color */
}
